# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_rf24', [dirname(__file__)])
        except ImportError:
            import _rf24
            return _rf24
        if fp is not None:
            try:
                _mod = imp.load_module('_rf24', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _rf24 = swig_import_helper()
    del swig_import_helper
else:
    import _rf24
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


RF24_PA_MIN = _rf24.RF24_PA_MIN
RF24_PA_LOW = _rf24.RF24_PA_LOW
RF24_PA_HIGH = _rf24.RF24_PA_HIGH
RF24_PA_MAX = _rf24.RF24_PA_MAX
RF24_PA_ERROR = _rf24.RF24_PA_ERROR
RF24_1MBPS = _rf24.RF24_1MBPS
RF24_2MBPS = _rf24.RF24_2MBPS
RF24_250KBPS = _rf24.RF24_250KBPS
RF24_CRC_DISABLED = _rf24.RF24_CRC_DISABLED
RF24_CRC_8 = _rf24.RF24_CRC_8
RF24_CRC_16 = _rf24.RF24_CRC_16
class RF24(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RF24, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RF24, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _rf24.new_RF24(*args)
        try: self.this.append(this)
        except: self.this = this
    def begin(self): return _rf24.RF24_begin(self)
    def startListening(self): return _rf24.RF24_startListening(self)
    def stopListening(self): return _rf24.RF24_stopListening(self)
    def write(self, *args): return _rf24.RF24_write(self, *args)
    def read(self, *args): return _rf24.RF24_read(self, *args)
    def openWritingPipe(self, *args): return _rf24.RF24_openWritingPipe(self, *args)
    def openReadingPipe(self, *args): return _rf24.RF24_openReadingPipe(self, *args)
    def setRetries(self, *args): return _rf24.RF24_setRetries(self, *args)
    def setChannel(self, *args): return _rf24.RF24_setChannel(self, *args)
    def setPayloadSize(self, *args): return _rf24.RF24_setPayloadSize(self, *args)
    def getPayloadSize(self): return _rf24.RF24_getPayloadSize(self)
    def getDynamicPayloadSize(self): return _rf24.RF24_getDynamicPayloadSize(self)
    def enableAckPayload(self): return _rf24.RF24_enableAckPayload(self)
    def enableDynamicPayloads(self): return _rf24.RF24_enableDynamicPayloads(self)
    def isPVariant(self): return _rf24.RF24_isPVariant(self)
    def setAutoAck(self, *args): return _rf24.RF24_setAutoAck(self, *args)
    def setPALevel(self, *args): return _rf24.RF24_setPALevel(self, *args)
    def getPALevel(self): return _rf24.RF24_getPALevel(self)
    def setDataRate(self, *args): return _rf24.RF24_setDataRate(self, *args)
    def getDataRate(self): return _rf24.RF24_getDataRate(self)
    def setCRCLength(self, *args): return _rf24.RF24_setCRCLength(self, *args)
    def getCRCLength(self): return _rf24.RF24_getCRCLength(self)
    def disableCRC(self): return _rf24.RF24_disableCRC(self)
    def printDetails(self): return _rf24.RF24_printDetails(self)
    def powerDown(self): return _rf24.RF24_powerDown(self)
    def powerUp(self): return _rf24.RF24_powerUp(self)
    def available(self, *args): return _rf24.RF24_available(self, *args)
    def startWrite(self, *args): return _rf24.RF24_startWrite(self, *args)
    def writeAckPayload(self, *args): return _rf24.RF24_writeAckPayload(self, *args)
    def isAckPayloadAvailable(self): return _rf24.RF24_isAckPayloadAvailable(self)
    def whatHappened(self, *args): return _rf24.RF24_whatHappened(self, *args)
    def testCarrier(self): return _rf24.RF24_testCarrier(self)
    def testRPD(self): return _rf24.RF24_testRPD(self)
    __swig_destroy__ = _rf24.delete_RF24
    __del__ = lambda self : None;
RF24_swigregister = _rf24.RF24_swigregister
RF24_swigregister(RF24)


def new_byteArray(*args):
  return _rf24.new_byteArray(*args)
new_byteArray = _rf24.new_byteArray

def delete_byteArray(*args):
  return _rf24.delete_byteArray(*args)
delete_byteArray = _rf24.delete_byteArray

def byteArray_getitem(*args):
  return _rf24.byteArray_getitem(*args)
byteArray_getitem = _rf24.byteArray_getitem

def byteArray_setitem(*args):
  return _rf24.byteArray_setitem(*args)
byteArray_setitem = _rf24.byteArray_setitem
RPI_GPIO_P1_03 = _rf24.RPI_GPIO_P1_03
RPI_GPIO_P1_05 = _rf24.RPI_GPIO_P1_05
RPI_GPIO_P1_07 = _rf24.RPI_GPIO_P1_07
RPI_GPIO_P1_08 = _rf24.RPI_GPIO_P1_08
RPI_GPIO_P1_10 = _rf24.RPI_GPIO_P1_10
RPI_GPIO_P1_11 = _rf24.RPI_GPIO_P1_11
RPI_GPIO_P1_12 = _rf24.RPI_GPIO_P1_12
RPI_GPIO_P1_13 = _rf24.RPI_GPIO_P1_13
RPI_GPIO_P1_15 = _rf24.RPI_GPIO_P1_15
RPI_GPIO_P1_16 = _rf24.RPI_GPIO_P1_16
RPI_GPIO_P1_18 = _rf24.RPI_GPIO_P1_18
RPI_GPIO_P1_19 = _rf24.RPI_GPIO_P1_19
RPI_GPIO_P1_21 = _rf24.RPI_GPIO_P1_21
RPI_GPIO_P1_22 = _rf24.RPI_GPIO_P1_22
RPI_GPIO_P1_23 = _rf24.RPI_GPIO_P1_23
RPI_GPIO_P1_24 = _rf24.RPI_GPIO_P1_24
RPI_GPIO_P1_26 = _rf24.RPI_GPIO_P1_26
RPI_V2_GPIO_P1_03 = _rf24.RPI_V2_GPIO_P1_03
RPI_V2_GPIO_P1_05 = _rf24.RPI_V2_GPIO_P1_05
RPI_V2_GPIO_P1_07 = _rf24.RPI_V2_GPIO_P1_07
RPI_V2_GPIO_P1_08 = _rf24.RPI_V2_GPIO_P1_08
RPI_V2_GPIO_P1_10 = _rf24.RPI_V2_GPIO_P1_10
RPI_V2_GPIO_P1_11 = _rf24.RPI_V2_GPIO_P1_11
RPI_V2_GPIO_P1_12 = _rf24.RPI_V2_GPIO_P1_12
RPI_V2_GPIO_P1_13 = _rf24.RPI_V2_GPIO_P1_13
RPI_V2_GPIO_P1_15 = _rf24.RPI_V2_GPIO_P1_15
RPI_V2_GPIO_P1_16 = _rf24.RPI_V2_GPIO_P1_16
RPI_V2_GPIO_P1_18 = _rf24.RPI_V2_GPIO_P1_18
RPI_V2_GPIO_P1_19 = _rf24.RPI_V2_GPIO_P1_19
RPI_V2_GPIO_P1_21 = _rf24.RPI_V2_GPIO_P1_21
RPI_V2_GPIO_P1_22 = _rf24.RPI_V2_GPIO_P1_22
RPI_V2_GPIO_P1_23 = _rf24.RPI_V2_GPIO_P1_23
RPI_V2_GPIO_P1_24 = _rf24.RPI_V2_GPIO_P1_24
RPI_V2_GPIO_P1_26 = _rf24.RPI_V2_GPIO_P1_26
RPI_V2_GPIO_P5_03 = _rf24.RPI_V2_GPIO_P5_03
RPI_V2_GPIO_P5_04 = _rf24.RPI_V2_GPIO_P5_04
RPI_V2_GPIO_P5_05 = _rf24.RPI_V2_GPIO_P5_05
RPI_V2_GPIO_P5_06 = _rf24.RPI_V2_GPIO_P5_06
BCM2835_SPI_CLOCK_DIVIDER_65536 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_65536
BCM2835_SPI_CLOCK_DIVIDER_32768 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_32768
BCM2835_SPI_CLOCK_DIVIDER_16384 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_16384
BCM2835_SPI_CLOCK_DIVIDER_8192 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_8192
BCM2835_SPI_CLOCK_DIVIDER_4096 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_4096
BCM2835_SPI_CLOCK_DIVIDER_2048 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_2048
BCM2835_SPI_CLOCK_DIVIDER_1024 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_1024
BCM2835_SPI_CLOCK_DIVIDER_512 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_512
BCM2835_SPI_CLOCK_DIVIDER_256 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_256
BCM2835_SPI_CLOCK_DIVIDER_128 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_128
BCM2835_SPI_CLOCK_DIVIDER_64 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_64
BCM2835_SPI_CLOCK_DIVIDER_32 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_32
BCM2835_SPI_CLOCK_DIVIDER_16 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_16
BCM2835_SPI_CLOCK_DIVIDER_8 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_8
BCM2835_SPI_CLOCK_DIVIDER_4 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_4
BCM2835_SPI_CLOCK_DIVIDER_2 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_2
BCM2835_SPI_CLOCK_DIVIDER_1 = _rf24.BCM2835_SPI_CLOCK_DIVIDER_1
BCM2835_SPI_SPEED_8KHZ = _rf24.BCM2835_SPI_SPEED_8KHZ
BCM2835_SPI_SPEED_16KHZ = _rf24.BCM2835_SPI_SPEED_16KHZ
BCM2835_SPI_SPEED_32KHZ = _rf24.BCM2835_SPI_SPEED_32KHZ
BCM2835_SPI_SPEED_64KHZ = _rf24.BCM2835_SPI_SPEED_64KHZ
BCM2835_SPI_SPEED_128KHZ = _rf24.BCM2835_SPI_SPEED_128KHZ
BCM2835_SPI_SPEED_256KHZ = _rf24.BCM2835_SPI_SPEED_256KHZ
BCM2835_SPI_SPEED_512KHZ = _rf24.BCM2835_SPI_SPEED_512KHZ
BCM2835_SPI_SPEED_1MHZ = _rf24.BCM2835_SPI_SPEED_1MHZ
BCM2835_SPI_SPEED_2MHZ = _rf24.BCM2835_SPI_SPEED_2MHZ
BCM2835_SPI_SPEED_4MHZ = _rf24.BCM2835_SPI_SPEED_4MHZ
BCM2835_SPI_SPEED_8MHZ = _rf24.BCM2835_SPI_SPEED_8MHZ
BCM2835_SPI_SPEED_16MHZ = _rf24.BCM2835_SPI_SPEED_16MHZ
BCM2835_SPI_SPEED_32MHZ = _rf24.BCM2835_SPI_SPEED_32MHZ
BCM2835_SPI_SPEED_64MHZ = _rf24.BCM2835_SPI_SPEED_64MHZ
# This file is compatible with both classic and new-style classes.


